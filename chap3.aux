\relax 
\providecommand\hyper@newdestlabel[2]{}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\newpmemlabel{^_1}{1}
\@writefile{toc}{\contentsline {chapter}{\numberline {1}Text circuits for syntax}{5}{chapter.1}\protected@file@percent }
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\newlabel{chapter:textcircuits}{{1}{5}{Text circuits for syntax}{chapter.1}{}}
\newlabel{defn:lex}{{1.1.1}{6}{Lexicon}{theorem.1.1.1}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.1}{\ignorespaces \textbf  {How to read the diagrams in this section:} we will be making heavy use of pink and purple bubbles as frames to construct circuits. We will depict the bubbles horizontally, as we are permitted to by compact closure, or by reading diagrams with slightly skewed axes.}}{6}{theorem.1.1.1}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {1.2}{\ignorespaces Every derivation starts with a single blank sentence bubble, to which we may append more blank sentences.}}{6}{theorem.1.1.1}\protected@file@percent }
\@writefile{toc}{\contentsline {section}{\numberline {1.1}A generative grammar for text circuits}{6}{section.1.1}\protected@file@percent }
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1.1}A circuit-growing grammar}{6}{subsection.1.1.1}\protected@file@percent }
\newpmemlabel{^_2}{7}
\newpmemlabel{^_3}{7}
\@writefile{lof}{\contentsline {figure}{\numberline {1.3}{\ignorespaces In this toy example, obtaining the same rewrite that connects the two yellow nodes with a purple wire using only graph-theoretically-local rewrites could potentially require an infinite family of rules for all possible configurations of pink and cyan nodes that separate the yellow, or would otherwise require disturbing other nodes in the rewrite process. In our setting, strong compact closure homotopies handle navigation between different spatial presentations so that a single rewrite rule suffices: the source and target notated by dotted-black circles. Despite the expressive economy and power of finitely presented signatures, we cannot "computationally cheat" graph isomorphism: formally we must supply the compact-closure homotopies as part of the rewrite, absorbed and hidden here by the $\simeq $ notation.}}{7}{theorem.1.1.1}\protected@file@percent }
\newlabel{fig:locality}{{1.3}{7}{A circuit-growing grammar}{theorem.1.1.1}{}}
\tcolorbox@label{1}{8}
\newlabel{rules:simp}{{1.1.2}{8}{Simple sentences}{theorem.1.1.2}{}}
\tcolorbox@label{2}{9}
\newlabel{rules:comp}{{1.1.3}{9}{Complex sentences}{theorem.1.1.3}{}}
\tcolorbox@label{3}{10}
\newlabel{ex:soberA}{{1.1.4}{10}{\texttt {sober} $\alpha $ \texttt {sees drunk} $\beta $ \texttt {clumsily dance.}}{theorem.1.1.4}{}}
\tcolorbox@label{4}{11}
\newlabel{ex:Alaughs}{{1.1.5}{11}{$\alpha $ \texttt {laughs at} $\beta $}{theorem.1.1.5}{}}
\tcolorbox@label{5}{12}
\newlabel{rules:coref}{{1.1.6}{12}{Coreferential structure and noun labels}{theorem.1.1.6}{}}
\tcolorbox@label{6}{13}
\newlabel{rules:labels}{{1.1.7}{13}{Labelling nouns}{theorem.1.1.7}{}}
\tcolorbox@label{7}{14}
\newlabel{ex:corefex1}{{1.1.8}{14}{\texttt {sober Alice sees Bob clumsily dance. She laughs at him.}}{theorem.1.1.8}{}}
\tcolorbox@label{8}{15}
\tcolorbox@label{9}{16}
\newlabel{cons:wirejoin}{{1.1.9}{16}{Text to circuit}{theorem.1.1.9}{}}
\tcolorbox@label{10}{17}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1.2}Text circuit theorem}{18}{subsection.1.1.2}\protected@file@percent }
\newpmemlabel{^_4}{18}
\newpmemlabel{^_5}{18}
\@writefile{lof}{\contentsline {figure}{\numberline {1.4}{\ignorespaces  \begin  {construction}[CSG for simple sentences] \end  {construction} We may gauge the expressivity of simple sentences with the following context-sensitive grammar. }}{18}{subsection.1.1.2}\protected@file@percent }
\newlabel{dfn:simpCSG}{{1.4}{18}{Text circuit theorem}{theorem.1.1.11}{}}
\newpmemlabel{^_6}{18}
\newpmemlabel{^_7}{18}
\@writefile{lof}{\contentsline {figure}{\numberline {1.5}{\ignorespaces  Adpositions require several helper-generators; we depict for example the beginning of the sequence of derivations that result from appending adpositions to an intransitive verb (the generators are implicit in the derivations): }}{18}{theorem.1.1.11}\protected@file@percent }
\newpmemlabel{^_8}{18}
\newpmemlabel{^_9}{18}
\@writefile{lof}{\contentsline {figure}{\numberline {1.6}{\ignorespaces  \begin  {proposition} Up to labels, the simple-sentence rules yield the same simple sentences as the CSG for simple sentences. \begin  {proof} By graphical correspondence; viewing nodes on the pink surface as 1-cells, each rewrite rule yields a 2-cell. Reading top-down, the dashed-blue helper lines for adpositions indicate \leavevmode {\color  {blue}\texttt  {ADP}}-pass rules. The correspondence is visually evident, but may be expressed as a separate signature. The correspondence \leavevmode {\color  {green}\texttt  {IV}}-intro is depicted, to be read from left-to-right. \end  {proof} \end  {proposition} }}{18}{theorem.1.1.11}\protected@file@percent }
\newlabel{prop:simpsent}{{1.6}{18}{Text circuit theorem}{theorem.1.1.12}{}}
\newpmemlabel{^_10}{19}
\newpmemlabel{^_11}{19}
\@writefile{lof}{\contentsline {figure}{\numberline {1.7}{\ignorespaces  \begin  {proposition} Up to labels, Rules \ref  {rules:simp} and \ref  {rules:comp} for simple and complex sentence yield the same sentences as the combined CSG of Construction \ref  {dfn:simpCSG} with the depicted additional rules. \begin  {proof} Same correspondence as Proposition \ref  {prop:simpsent}, ignoring the dotted-blue guards. \end  {proof} \end  {proposition} }}{19}{theorem.1.1.12}\protected@file@percent }
\newlabel{prop:compsent}{{1.7}{19}{Text circuit theorem}{theorem.1.1.13}{}}
\newpmemlabel{^_12}{19}
\newpmemlabel{^_13}{19}
\@writefile{lof}{\contentsline {figure}{\numberline {1.8}{\ignorespaces We choose the convention of connecting from left-to-right and from bottom-to-top, so that we might read circuits as we would text: the components corresponding to words will be arranged left-to-right and top-to-bottom. Connecting nouns across distinct sentences presents no issue, but a complication arises when connecting nouns within the same sentence as with reflexive pronouns e.g. \texttt  {Alice likes herself}.}}{19}{theorem.1.1.13}\protected@file@percent }
\newpmemlabel{^_14}{19}
\newpmemlabel{^_15}{19}
\@writefile{lof}{\contentsline {figure}{\numberline {1.9}{\ignorespaces Reflexive coreference would violate of the processivity condition of string diagrams for symmetric monoidal categories. Not all symmetric monoidal categories possess the appropriate structure to interpret such reflexive pronouns, but there exist interpretative options. From left to right in roughly decreasing stringency, compact closed categories are the most direct solution. More weakly, traced symmetric monoidal categories also suffice. If there are no traces, so long as the noun wire possesses a monoid and comonoid, a convolution works. If all else fails, one can just specify a new gate. We provide a purely syntactic treatment in \begin  {color}{red}CITE \end  {color}\xspace  ; for now we treat them as if they were just verbs of lower arity.}}{19}{theorem.1.1.13}\protected@file@percent }
\newlabel{fig:reflcomp}{{1.9}{19}{Text circuit theorem}{theorem.1.1.13}{}}
\newpmemlabel{^_16}{20}
\newpmemlabel{^_17}{20}
\@writefile{lof}{\contentsline {figure}{\numberline {1.10}{\ignorespaces  \begin  {term}[Kinds of nouns with respect to coreference] The kinds of nouns are distinguished by their tails. \emph  {Lonely} nouns have no coreferences, their tails connect to nothing. \emph  {Head} nouns have a forward coreference in text; they have two tails, one that connects to nothing and the other to a noun later in text. \emph  {Middle} nouns have a forward and backward coreference; they have two tails, one that connects to a noun in some preceding sentence, and one that connects forward to a noun in a succeeding sentence. \emph  {Foot} nouns only have a backward coreference; they have a single tail connecting to a noun in some preceding sentence. \end  {term} }}{20}{theorem.1.1.13}\protected@file@percent }
\newlabel{fig:nounkinds}{{1.10}{20}{Text circuit theorem}{theorem.1.1.14}{}}
\newlabel{defn:finished}{{1.1.15}{20}{Finished text diagram}{theorem.1.1.15}{}}
\newlabel{prop:linkedlist}{{1.1.17}{20}{}{theorem.1.1.17}{}}
\newlabel{prop:norefl}{{1.1.18}{20}{}{theorem.1.1.18}{}}
\newlabel{conv:gaps}{{1.1.22}{21}{Arbitary vs. fixed holes}{theorem.1.1.22}{}}
\newlabel{conv:reading}{{1.1.24}{21}{Reading text circuits}{theorem.1.1.24}{}}
\newlabel{prop:text2circ}{{1.1.19}{21}{Finished text diagrams yield unique-up-to-processive-isotopy text circuits}{theorem.1.1.19}{}}
\newpmemlabel{^_18}{21}
\newpmemlabel{^_19}{21}
\@writefile{lof}{\contentsline {figure}{\numberline {1.11}{\ignorespaces  \begin  {convention}[Wire twisting] Wires are labelled by nouns. We consider two circuits the same if their gate-connectivity is the same. In particular, this means that we can eliminate unnecessary twists in wires to obtain diagrammatically simpler representations. \end  {convention} }}{21}{theorem.1.1.20}\protected@file@percent }
\newlabel{conv:twist}{{1.11}{21}{Text circuit theorem}{theorem.1.1.21}{}}
\newpmemlabel{^_20}{21}
\newpmemlabel{^_22}{21}
\newpmemlabel{^_24}{21}
\newpmemlabel{^_21}{22}
\@writefile{lof}{\contentsline {figure}{\numberline {1.12}{\ignorespaces  \begin  {convention}[Sliding] Since only gate-connectivity matters, we consider circuits the same if all that differs is the horizontal positioning of gates composed in parallel. \end  {convention} }}{22}{theorem.1.1.22}\protected@file@percent }
\newlabel{conv:sliding}{{1.12}{22}{Text circuit theorem}{theorem.1.1.23}{}}
\newpmemlabel{^_23}{22}
\@writefile{lof}{\contentsline {figure}{\numberline {1.13}{\ignorespaces  \begin  {convention}[Contentless conjunctions] Conventions \ref  {conv:sliding} and \ref  {conv:reading} require something else to allow them to work at the same time: something to distinguish when the gates are parallel. So we ask for "contentless" conjunctions, such as \texttt  {and}, or \texttt  {while}. In terms of text diagrams, we want rewrites that introduces such contentless conjunctions and witnesses their associativity, like this: \end  {convention} }}{22}{theorem.1.1.24}\protected@file@percent }
\newlabel{conv:and}{{1.13}{22}{Text circuit theorem}{theorem.1.1.25}{}}
\newpmemlabel{^_25}{22}
\@writefile{lof}{\contentsline {figure}{\numberline {1.14}{\ignorespaces  \begin  {convention}[Lonely wires] There's really only a single kind of text circuit we can draw that doesn't obviously correspond to a text diagram, and that's one where gates are missing (left). In process theories, wires are identity processes that do nothing to their inputs. We require a text diagram analogue, and an intransitive "null-verb" in English that seems to work is \texttt  {is}, in the sense of \texttt  {exists}. So to deal with lonely wires in terms of text diagrams, we want a rewrite that introduces such contentless verbs (right). \end  {convention} }}{22}{theorem.1.1.25}\protected@file@percent }
\newlabel{conv:exists}{{1.14}{22}{Text circuit theorem}{theorem.1.1.26}{}}
\tcolorbox@label{11}{23}
\newlabel{cons:circ2text}{{1.1.27}{23}{Circuit to text}{theorem.1.1.27}{}}
\tcolorbox@label{12}{24}
\tcolorbox@label{13}{25}
\tcolorbox@label{14}{26}
\citation{wilson_string_2022}
\citation{merry_reasoning_2014,quick_-logic_2015,zamdzhiev_rewriting_2017}
\@writefile{toc}{\contentsline {section}{\numberline {1.2}Text circuits: details and development}{27}{section.1.2}\protected@file@percent }
\newlabel{sec:circs}{{1.2}{27}{Text circuits: details and development}{section.1.2}{}}
\@writefile{toc}{\contentsline {section}{\numberline {1.3}How to play}{28}{section.1.3}\protected@file@percent }
\tcolorbox@label{15}{31}
\newlabel{rules:relpron}{{1.3.1}{31}{}{theorem.1.3.1}{}}
\tcolorbox@label{16}{32}
\newlabel{ex:relpron}{{1.3.2}{32}{Introducing relative pronouns}{theorem.1.3.2}{}}
\tcolorbox@label{17}{33}
\newlabel{ex:pass}{{1.3.3}{33}{\textbf {Passive voice}}{theorem.1.3.3}{}}
\tcolorbox@label{18}{33}
\newlabel{ex:copula}{{1.3.4}{33}{\textbf {Copulas}}{theorem.1.3.4}{}}
\tcolorbox@label{19}{34}
\newlabel{ex:posspron}{{1.3.5}{34}{\textbf {Possessive pronouns}}{theorem.1.3.5}{}}
\tcolorbox@label{20}{35}
\newlabel{ex:intensifiers}{{1.3.6}{35}{\textbf {Intensifers}}{theorem.1.3.6}{}}
\tcolorbox@label{21}{36}
\newlabel{ex:comparatives}{{1.3.7}{36}{\textbf {Comparatives}}{theorem.1.3.7}{}}
\tcolorbox@label{22}{37}
\newlabel{ex:syncat1}{{1.3.8}{37}{\textbf {Syncategorematicity I}}{theorem.1.3.8}{}}
\ttl@finishall
\tcolorbox@label{23}{38}
\newlabel{ex:syncat2}{{1.3.9}{38}{\textbf {Syncategorematicity II}}{theorem.1.3.9}{}}
\tcolorbox@label{24}{38}
\newlabel{ex:coord}{{1.3.10}{38}{\textbf {Coordination}}{theorem.1.3.10}{}}
\tcolorbox@label{25}{39}
\newlabel{ex:det1}{{1.3.11}{39}{\textbf {Determiners I}}{theorem.1.3.11}{}}
\tcolorbox@label{26}{39}
\newlabel{ex:det2}{{1.3.12}{39}{\textbf {Determiners II}}{theorem.1.3.12}{}}
\tcolorbox@label{27}{40}
\newlabel{ex:det3}{{1.3.13}{40}{\textbf {Determiners III}}{theorem.1.3.13}{}}
\tcolorbox@label{28}{41}
\newlabel{ex:quant2}{{1.3.14}{41}{\textbf {Quantifiers I}}{theorem.1.3.14}{}}
\tcolorbox@label{29}{42}
\newlabel{ex:quant2}{{1.3.15}{42}{\textbf {Quantifiers II}}{theorem.1.3.15}{}}
\gdef \@abspage@last{42}
